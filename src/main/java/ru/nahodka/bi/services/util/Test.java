package ru.nahodka.bi.services.util;


import org.w3c.dom.Document;
import ru.it.smev.message_exchange.autogenerated.service.*;
import ru.nahodka.services.common.schemas.egeresultsresponse.EgeResultsResponseType;
import ru.nakhodka.smev3.*;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.net.MalformedURLException;
import java.net.URL;

@Deprecated
public class Test {

    EgeResultsResponseType egeResultsResponse=new EgeResultsResponseType();

    ru.it.smev.message_exchange.autogenerated.service.SMEVMessageExchangeService service;

    {
        try {
            service = new SMEVMessageExchangeService(new URL("http://localhost:9082/?wsdl"));
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
    }

    JAXBContext jaxbContext;
    Document document;
    Signer jcpSigner;
    Marshaller marshaller;

    {
        try {
            jaxbContext = JAXBContext.newInstance(EgeResultsResponseType.class);
            document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();
            jcpSigner = SignerProvider.gost_r_34_10_2001_jcp2.configure("HDImageStore","key",null,"Certificate");
            marshaller = jaxbContext.createMarshaller();
            marshaller.marshal(egeResultsResponse,document);
            jcpSigner.sign(document.getDocumentElement());
        } catch (ParserConfigurationException | SigningException | SignerInitializationException | SignerConfigureException | JAXBException e) {
            e.printStackTrace();
        }
    }

    SMEV3Messager messager;

    {
        try {
            messager = new SMEV3Messager(service,jcpSigner,true);
        } catch (DatatypeConfigurationException e) {
            e.printStackTrace();
        } catch (JAXBException e) {
            e.printStackTrace();
        }
    }

    SMEV3MessageContext smev3MessageContext;

    {
        try {
            smev3MessageContext = messager.getRequest();
        } catch (JAXBException | UnknownMessageTypeException | SignatureVerificationFaultException | SenderIsNotRegisteredException | SMEVFailureException | InvalidContentException | SigningException e) {
            e.printStackTrace();
        }
    }


}
